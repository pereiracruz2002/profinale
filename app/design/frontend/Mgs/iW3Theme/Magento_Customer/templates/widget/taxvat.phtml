
<?php
/**
 * Copyright © 2015 Magento. All rights reserved.
 * See COPYING.txt for license details.
 */

// @codingStandardsIgnoreFile

?>
<div class="field taxvat<?php if ($block->isRequired()) echo ' required'; ?>">
    <label class="label" for="taxvat">
        <span><?php /* @escapeNotVerified */ echo __('Tax/VAT number') ?></span>
    </label>
    <div class="control">
        <input type="text" maxlength="14" id="<?php /* @escapeNotVerified */ echo $block->getFieldId('taxvat')?>" onkeypress="mascaraMutuario(this,cpfCnpj)" onblur="validaCampo(this)" name="<?php /* @escapeNotVerified */ echo $block->getFieldName('taxvat')?>" value="<?php echo $block->escapeHtml($block->getTaxvat()) ?>" title="<?php /* @escapeNotVerified */ echo __('Tax/VAT number') ?>" placeholder="<?php /* @escapeNotVerified */ echo __('Tax/VAT number') ?>" class="input-text <?php /* @escapeNotVerified */ echo $this->helper('Magento\Customer\Helper\Address')->getAttributeValidationClass('taxvat') ?>" <?php /* @escapeNotVerified */ echo $block->getFieldParams() ?> <?php if ($block->isRequired()) echo ' data-validate="{required:true}"' ?>>
    </div>
    <div id="msg-validacao-iw3"></div>
</div>

<script>
    function mascaraMutuario(o,f){
        v_obj=o;
        v_fun=f;
        setTimeout('execmascara()',1)
    }

    function execmascara(){
        v_obj.value=v_fun(v_obj.value)
    }

    function cpfCnpj(v){
        v=v.replace(/\D/g,"");

        if (v.length > 0 && v.length <= 11) {
            //CPF
            v=v.replace(/(\d{3})(\d)/,"$1.$2");

            v=v.replace(/(\d{3})(\d)/,"$1.$2");

            v=v.replace(/(\d{3})(\d{1,2})$/,"$1-$2")
        } else {
            //CNPJ
            v=v.replace(/^(\d{2})(\d)/,"$1.$2");

            v=v.replace(/^(\d{2})\.(\d{3})(\d)/,"$1.$2.$3");

            v=v.replace(/\.(\d{3})(\d)/,".$1/$2");

            v=v.replace(/(\d{4})(\d)/,"$1-$2");
        }
        return v
    }
</script>

<script>
    function validaCampo(obj) {
        var object = obj.value;
        if (object.length <= 14) {
            ValidarCPF(obj)
        } else {
            ValidarCNPJ(obj)
        }
    }
    //valida o CPF digitado
    function ValidarCPF(Objcpf) {
        var cpf = Objcpf.value;
        exp = /\.|\-/g
        cpf = cpf.toString().replace(exp, "");


        if (!VerificaCPF(cpf)) {
            document.getElementById("msg-validacao-iw3").innerHTML = " *CPF Inválido!";
            document.getElementById("taxvat").style.border = "dashed 1px red";
            document.getElementById("taxvat").value = "";
        } else {
            document.getElementById("msg-validacao-iw3").innerHTML = "";
            document.getElementById("taxvat").style.border = "solid 1px #dddddd";

        }
    }
    //valida o CNPJ digitado
    function ValidarCNPJ(ObjCnpj) {

        var cnpj = ObjCnpj.value;
        var valida = new Array(6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2);
        var dig1 = new Number;
        var dig2 = new Number;

        exp = /\.|\-|\//g
        cnpj = cnpj.toString().replace(exp, "");
        var digito = new Number(eval(cnpj.charAt(12) + cnpj.charAt(13)));

        for (i = 0; i < valida.length; i++) {
            dig1 += (i > 0 ? (cnpj.charAt(i - 1) * valida[i]) : 0);
            dig2 += cnpj.charAt(i) * valida[i];
        }
        dig1 = (((dig1 % 11) < 2) ? 0 : (11 - (dig1 % 11)));
        dig2 = (((dig2 % 11) < 2) ? 0 : (11 - (dig2 % 11)));

        if (cnpj == 00000000000000 || ((dig1 * 10) + dig2) != digito) {
            document.getElementById("msg-validacao-iw3").innerHTML = " *CNPJ Inválido!";
            document.getElementById("taxvat").style.border = "dashed 1px red";
            document.getElementById("taxvat").value = "";
        } else {
            document.getElementById("msg-validacao-iw3").innerHTML = "";
            document.getElementById("taxvat").style.border = "solid 1px #dddddd";

        }

    }
    //  console.log( VerificaCPF('20091850720'));

    function VerificaCPF(cpf)
    {
        if(cpf.value == 00000000000){
            return false;
        }
        var numeros, digitos, soma, i, resultado, digitos_iguais;
        digitos_iguais = 1;
        if (cpf.length < 11)
            return false;
        for (i = 0; i < cpf.length - 1; i++)
            if (cpf.charAt(i) != cpf.charAt(i + 1))
            {
                digitos_iguais = 0;
                break;
            }
        if (!digitos_iguais)
        {
            numeros = cpf.substring(0,9);
            digitos = cpf.substring(9);
            soma = 0;
            for (i = 10; i > 1; i--)
                soma += numeros.charAt(10 - i) * i;
            resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
            if (resultado != digitos.charAt(0))
                return false;
            numeros = cpf.substring(0,10);
            soma = 0;
            for (i = 11; i > 1; i--)
                soma += numeros.charAt(11 - i) * i;
            resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
            if (resultado != digitos.charAt(1))
                return false;
            return true;
        }
        else
            return false;
    }
</script>